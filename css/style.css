/* :root{} används för att definera variabler */
:root {
    /* Alltid -- innan variabel */
    --main-bg: #6D6D6D;
    --top-bot: #0E0E0E;
    --cont: #2D2D2D;
    --cont1: #F84040;
    --cont2: #51BD39;
}

/* Berör alla objekt */
* {
    /* Tar bort padding samt margin för alla objekt */
    padding: 0;
    margin: 0;

    color: #fff;
}

body {
    /* Anropa variabler med hjälp av var() */
    background-color: var(--main-bg);

    /* ställer in höjd, bredd och tar bort scroll */
    width: 100vw;
    overflow-x: hidden;

    /* display: grid; berättar för webbläsaren att objektet ska betraktas som en grid */
    display: grid;
}

/* sätter färger för div-taggar */
#top { 
    background-color: var(--top-bot); 
    text-align: center;
}
#top p {
    font-size: 3em;
}
#footer { background-color: var(--top-bot); }
#content { 
    background-color: var(--cont); 
    /* Detta objekt ska också visas som en grid */
    display: grid;
}
#cont-1 { background-color: var(--cont1); }
#cont-2 { background-color: var(--cont2); }

/* hur sidan ska se ut när den är i desktop-version */
@media screen and (min-width: 1080px){
    body {
        /* 
            Definerar antal kolumner som skall visas i body.
            repeat(12, 1fr) är samma sak som att man skulle skriva 1fr 12 gånger.
            fr är en ny måttenhet som kom med CSS3, fungerar ungefär likadant som %,
            Men fr tar även padding samt margin i åtanke, vilket gör att den bevarar samma
            Storlek oavsett 
        */
        grid-template-columns: repeat(12, 1fr);
        grid-template-rows: repeat(30, 1fr);

        height: 300vh;
    }
    #top {
        /* Ställer in mellan vilka kolumnlinjer objektet kan visas */
        grid-column: 1/13;

        /* Ställer in mellan vilka radlinjer objektet kan visas */
        grid-row: 1/2;

        /* 
            Båda kan alternativt skrivas på ett annat sätt:
            grid-column: 1/13; =
            grid-column-start: 1;
            grid-column-end: 13;

            grid-row: 1/2;
            grid-row-start: 1;
            grid-row-end: 2;
        
        */
    }
    #content {
        grid-column: 2/12;
        grid-row: 3/28;

        grid-template-columns: repeat(10, 1fr);
        grid-template-rows: repeat(14, 1fr);
    }
    #cont-1 {
        grid-column: 2/10;
        grid-row: 2/5;
    }
    #cont-2 {
        grid-column: 2/10;
        grid-row: 6/14;
    }
    #footer {
        grid-column: 1/13;
        grid-row: 30/31;
    }
}

/* Responsiv design */

@media screen and (max-width: 1079px){
    body {
        grid-template-columns: repeat(6, 1fr);
        grid-template-rows: repeat(20, 1fr);

        height: 200vh;
    }
    #top {
        /* Ställer in mellan vilka kolumnlinjer objektet kan visas */
        grid-column: 1/7;

        /* Ställer in mellan vilka radlinjer objektet kan visas */
        grid-row: 1/2;
    }
    #content {
        grid-column: 2/6;
        grid-row: 3/19;

        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: repeat(10, 1fr);
    }
    #cont-1 {
        grid-column: 2/4;
        grid-row: 2/5;
    }
    #cont-2 {
        grid-column: 2/4;
        grid-row: 6/10;
    }
    #footer {
        grid-column: 1/7;
        grid-row: 20/21;
    }
}

@media screen and (max-width: 720px){
    body {
        grid-template-columns: repeat(5, 1fr);
        grid-template-rows: repeat(20, 1fr);

        height: 200vh;
    }
    #top {
        /* Ställer in mellan vilka kolumnlinjer objektet kan visas */
        grid-column: 1/7;

        /* Ställer in mellan vilka radlinjer objektet kan visas */
        grid-row: 1/3;
    }
    #content {
        grid-column: 2/5;
        grid-row: 4/18;

        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: repeat(10, 1fr);
    }
    #cont-1 {
        grid-column: 1/5;
        grid-row: 1/5;
    }
    #cont-2 {
        grid-column: 1/5;
        grid-row: 6/11;
    }
    #footer {
        grid-column: 1/7;
        grid-row: 19/21;
    }
}
